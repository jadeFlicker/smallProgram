<style lang="scss">
  page{
    background: #F3F5F7;
  }

  .background_box{
    background:#fff;
  }
  .header{
    justify-content: flex-end;
    height: 88rpx;
    color: #4A90E2;
    font-size: 32rpx;
    font-weight: 600;
    padding-right: 32rpx;
    box-shadow:0px 10rpx 8rpx 0rpx rgba(0,0,0,0.07);
  }
  .editor_box{
    padding: 26rpx 48rpx 0rpx 32rpx;
  }
  .editor_title{
    font-size:24rpx;
    font-weight:600;
    color:rgba(117,117,117,1);
  }
  .date_box{
    justify-content: space-between;
  }
  .date{
    width:270rpx;
    height:54rpx;
    background:rgba(74,144,226,0.09);
    border-radius:27rpx;
    font-size:28rpx;
    font-weight:400;
    margin-top: 16rpx;
    color:rgba(74,144,226,1);
  }
  .date_box{
    border-bottom: 2rpx solid #EEEEEE;
    padding-bottom: 32rpx;
  }
  input,.placeholderClass{
    font-size:28rpx;
    font-weight:400;
    color:rgba(204,204,204,1);
  }
  input{
    margin-top: 32rpx;
    margin-bottom: 48rpx;
  }
  .add_voice{
    width:68rpx;
    height:52rpx;
    background:rgba(74,144,226,0.08);
    border-radius:26rpx;
  }
  .add_voice_box{
    justify-content: flex-start;

  }
  .add_picture_box{
    justify-content: flex-start;
  }
  .add_picture{
    width:128rpx;
    height:130rpx;
    border-radius:8rpx;
    border:2rpx dashed #EEEEEE;
    margin-bottom: 24rpx;
  }
  .label_box{
    justify-content: flex-start;
    padding-bottom: 64rpx;
  }
  .label_list{
    font-size:28rpx;
    font-weight:400;
    color: #757575;
    padding: 8rpx 22rpx;
    margin-right: 24rpx;
    background:rgba(158,158,158,0.1);
    border-radius:8rpx;
  }
  .label_list_active{
    color:#3378E1;
    background:rgba(74,144,226,0.09);
  }
  .time_box{
    padding: 16rpx 0rpx 142rpx;
  }
  .time_list_box{
    background: #fff;
    padding: 0rpx 32rpx;
  }
  .time_list{
    font-size:28rpx;
    font-weight:400;
    color:rgba(66,66,66,1);
    height: 128rpx;
    justify-content: space-between;
  }
  // 声音
  .voice_detail{
    width:228rpx;
    height:52rpx;
    background:rgba(233,243,255,1);
    border-radius:26rpx;
    justify-content: flex-start;
    margin-left: 16rpx;
  }
  .voice_detail_left{
    width:156rpx;
    height:52rpx;
    background:rgba(240,246,253,1);
    box-shadow:0rpx 0rpx 20rpx 0rpx rgba(74,144,226,0.13);
    border-radius:26rpx;
  }
  .voice_error{
    margin-left: 16rpx;
  }
  .record_text{
    width:156rpx;
    height:52rpx;
    font-size:28rpx;
    font-weight:400;
    color: #3378E1;
    border-radius:26rpx;
    background: #F0F6FD;
    margin-left: 16rpx;
  }
</style>
<template>
  <view class="container">
    <view class="background_box">
        <view class="flex header">
          <view>发布</view>
        </view>
        <view class="editor_box">
            <view class="editor_title">任务日期</view>
            <view class="flex date_box">
              <view class="flex date">今天 09月05日</view>
                <image style="width:20rpx;height:28rpx;" src=""></image>
            </view>
            <input type="text" name="" value="" placeholder='你希望做什么' placeholder-class='placeholderClass'/>
            <view class="flex add_picture_box">
              <image style="height:130rpx;width:130rpx;margin-right:16rpx;" src="{{item}}" wx:for='{{img_array}}' wx:if='{{img_array.length!=0}}' wx:key='{{index}}'></image>
              <view class="flex add_picture">
                <image style="height:44rpx;width:42rpx;" src="../static/img/add_picture.png" @tap='add_picture'></image>
              </view>
            </view>

            <view class="flex add_voice_box">
              <view class="flex add_voice" >
                <image style="height:36rpx;width:36rpx;" src="../static/img/voice.png"></image>
              </view>
              <view class="flex voice_detail" wx:if="{{voice_tag}}">
                <view class="flex voice_detail_left" @tap='voice_play'>
                    <image style="height:36rpx;width:36rpx;" src="../static/img/voice_launch.png"></image>
                    <view style="color:#757575;font-size:28rpx;font-weight:400;margin-left:20rpx;">{{voice_time}} ''</view>
                    <!-- 音频组件 -->
                    <audio  src="{{src}}" id="myAudio"></audio>
                </view>
                <view class="voice_error" @tap='remove_voice'>
                    <image style="height:34rpx;width:34rpx;" src="../static/img/error.png"></image>
                </view>
              </view>
              <view wx:else class="flex record_text" @tap='entry'>添加录音</view>
            </view>
            <view class="editor_title" style='margin-top:48rpx;margin-bottom:16rpx;'>添加标签</view>
            <view class="flex label_box">
                <view class="label_list {{label_list_class[index]?'label_list_active':''}}" @tap="babel_check" wx:for='{{label_list}}' wx:key="{{index}}" data-id='{{index}}'>{{item}}</view>
            </view>
        </view>
    </view>
    <view class="time_box">
        <view class="time_list_box">
            <picker mode="date" value="{{date}}" bindchange="bindDateChange_start">
                <view class="flex time_list" style="border-bottom:2rpx solid #EEEEEE;">
                  <view>{{date_start?date_start:'开始时间'}}</view>
                  <image style="height:28rpx;width:40rpx;" src="../static/img/arrow.png"></image>
                </view>
            </picker>
            <picker mode="date" value="{{date}}"  bindchange="bindDateChange_end">
                <view class="flex time_list" >
                  <view>{{date_end?date_end:'结束时间'}}</view>
                  <image style="height:28rpx;width:40rpx;" src="../static/img/arrow.png"></image>
                </view>
            </picker>
        </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  const recorderManager = wx.getRecorderManager()
  @connect({

  })

  export default class Editor extends wepy.page {
    config = {
      navigationBarTitleText: '发布'
    }
    components = {

    }

    data = {
      label_list:[
        '语文',
        '数学'
      ],
      voiceFile:'',
      label_list_class:[],
      voice_time:0,
      voice_tag:false,
      date_start:'',
      date_end:'',
      img_array:[],
      src:'http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&uin=346897220&vkey=6292F51E1E384E06DCBDC9AB7C49FD713D632D313AC4858BACB8DDD29067D3C601481D36E62053BF8DFEAF74C0A5CCFADD6471160CAF3E6A&fromtag=46'
    }

    computed = {

    }

    methods = {
      babel_check:(e)=>{
        this.label_list_class[e.target.dataset.id]=!this.label_list_class[e.target.dataset.id];
      },
      voice_play:()=>{
        const innerAudioContext = wx.createInnerAudioContext();
        innerAudioContext.autoplay = true;
        innerAudioContext.src = this.voiceFile;
        innerAudioContext.onPlay(() => {
          console.log('开始播放')
        })
        innerAudioContext.onError((res) => {
          console.log(res.errMsg);
          console.log(res.errCode);
        })
      },
      remove_voice:()=>{
        this.voice_tag=false;
        this.src='';
      },
      add_picture:()=>{
        let that=this;
        wx.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'],
          sourceType: ['album', 'camera'],
          success (res) {
            // tempFilePath可以作为img标签的src属性显示图片
            that.img_array=[res.tempFilePaths[0]];
            that.$apply();
          }
        })
      },
      entry:()=>{
        // console.log('===');
        recorderManager.onStart(() => {
          console.log('recorder start');
        })
        // recorderManager.onPause(() => {
        //   console.log('recorder pause')
        // })
        recorderManager.onStop((res) => {

          const { tempFilePath } = res;

          this.voice_time=parseInt(res.duration/1000);
          this.voiceFile=tempFilePath;
          this.voice_tag=true;
          this.$apply();
        })
        const options = {
          duration: 10000,
          sampleRate: 44100,
          numberOfChannels: 1,
          encodeBitRate: 192000,
          format: 'aac',
          frameSize: 50
        }
        recorderManager.start(options);
      },
      bindDateChange_start: function(e) {
          this.date_start= e.detail.value
      },
      bindDateChange_end: function(e) {
          this.date_end= e.detail.value
      }
    }

    events = {

    }

    onLoad() {

    }
    onReady (e) {
    // 使用 wx.createAudioContext 获取 audio 上下文 context

    }
  }
</script>
